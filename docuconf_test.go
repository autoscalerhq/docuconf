package docuconf

import (
	"os"
	"testing"
)

func TestMyConfCompleteOutput(t *testing.T) {
	result, err := NewConfBuilder("configuration").
		AddString("SomeField", "Some Description", false, "").
		Execute()
	if err != nil {
		t.Error(err)
		return
	}
	expected := `// Code generated by docuconf. DO NOT EDIT.
package configuration

type Configuration struct {
  SomeField string // Some Description
}
`

	if result != expected {
		t.Errorf("Expected %s but got %s", expected, result)
	}

	if err := os.WriteFile("configuration/configuration.go", []byte(result), 0644); err != nil {
		t.Error(err)
	}

}

func TestAddStringNotEnoughDescription(t *testing.T) {
	result := assertPanic(t, func() {
		NewConfBuilder("configuration").AddString("SomeField", "", true, "")
	})
	err, isError := result.(error)
	expected := "AddString(SomeField, ) Failed: description must be at least 5 characters long. This is to ensure your configuration is well documented"
	if isError && err.Error() != expected {
		t.Errorf("Expected: %s but got %s", expected, err)
	}
}

func assertPanic(t *testing.T, f func()) (r any) {
	defer func() {
		if r = recover(); r == nil {
			t.Errorf("The code did not panic")
		}
	}()
	f()
	return
}
